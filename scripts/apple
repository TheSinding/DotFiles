#!/bin/bash
UUID=$(curl -sL https://www.uuidgenerator.net/api/version4)
CLEAN=${UUID//[^a-zA-Z0-9_-]/}
OPTIND=1         # Reset in case getopts has been used previously in the shell.

# Initialize our own variables:

verbose=0

while getopts ":m:i:s:p:j:o:d:" opt; do
    case $opt in
		h|\?) 
			echo "This tool expects you to use SSL, all args must be there or else the something is missing in the config"
			echo "This is REALLY, REALLY, REALLY, badly made"
			echo "	-m, mail"
			echo "	-i, IMAP host"
			echo "	-j, IMAP port"
			echo "	-s, SMTP host"
			echo "	-p, SMTP port"
			echo "	-d, Identifier"
			echo "	-o, Organization"
			echo "	-f, Output file (Default, EMAIL.mobileconfig)"
			exit 0
				;;
    m)
        EMAIL=$OPTARG
				output_file=$EMAIL".mobileconfig"
        ;;
    i)  IMAP=$OPTARG
        ;;
		j)	IMAP_PORT=$OPTARG
				;;
    f)  output_file=$OPTARG
        ;;
		d)  IDENTIFIER=$OPTARG
				;;
		s)	SMTP=$OPTARG
				;;
		p)	SMTP_PORT=$OPTARG
				;;
		o) 	ORG=$OPTARG
				;;
		
    esac
done
touch $output_file

echo "
<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
  <key>PayloadContent</key>
  <array>
    <dict>
      <key>EmailAccountDescription</key>
      <string>$EMAIL</string>
      <key>EmailAccountName</key>
      <string>$EMAIL</string>
      <key>EmailAccountType</key>
      <string>EmailTypeIMAP</string>
      <key>EmailAddress</key>
      <string>$EMAIL</string>
      <key>IncomingMailServerAuthentication</key>
      <string>EmailAuthPassword</string>
      <key>IncomingMailServerHostName</key>
      <string>$IMAP</string>
      <key>IncomingMailServerPortNumber</key>
      <integer>$IMAP_PORT</integer>
      <key>IncomingMailServerUseSSL</key>
      <true/>
      <key>IncomingMailServerUsername</key>
      <string>$EMAIL</string>
      <key>OutgoingMailServerAuthentication</key>
      <string>EmailAuthPassword</string>
      <key>OutgoingMailServerHostName</key>
      <string>$SMTP</string>
      <key>OutgoingMailServerPortNumber</key>
      <integer>$SMTP_PORT</integer>
      <key>OutgoingMailServerUseSSL</key>
      <true/>
      <key>OutgoingMailServerUsername</key>
      <string>$EMAIL</string>
      <key>OutgoingPasswordSameAsIncomingPassword</key>
      <true/>
      <key>PayloadDescription</key>
      <string>$EMAIL Secure Email Setup</string>
      <key>PayloadDisplayName</key>
      <string>$EMAIL Secure Email Setup</string>
      <key>PayloadIdentifier</key>
      <string>mail.org.ss.coworkingplus.dk</string>
      <key>PayloadOrganization</key>
      <string>$ORG</string>
      <key>PayloadType</key>
      <string>com.apple.mail.managed</string>
      <key>PayloadUUID</key>
      <string>$UUID</string>
      <key>PayloadVersion</key>
      <integer>1</integer>
      <key>PreventAppSheet</key>
      <false/>
      <key>PreventMove</key>
      <false/>
      <key>SMIMEEnabled</key>
      <false/>
      <key>IncomingMailServerIMAPPathPrefix</key>
      <string>INBOX</string>
    </dict>
  </array>
  <key>PayloadDescription</key>
  <string>$EMAIL Secure Email Setup</string>
  <key>PayloadDisplayName</key>
  <string>$EMAIL Secure Email Setup</string>
  <key>PayloadIdentifier</key>
  <string>$IDENTIFIER</string>
  <key>PayloadOrganization</key>
  <string>$IDENTIFIER</string>
  <key>PayloadRemovalDisallowed</key>
  <false/>
  <key>PayloadType</key>
  <string>Configuration</string>
  <key>PayloadUUID</key>
  <string>$UUID</string>
  <key>PayloadVersion</key>
  <integer>1</integer>
</dict>
</plist>" >> $output_file
